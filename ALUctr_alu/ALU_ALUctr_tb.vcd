$date
	Mon Mar 10 16:31:03 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module ALU_ALUctr_tb $end
$var wire 1 ! zero $end
$var wire 32 " Y [31:0] $end
$var wire 5 # ALUop [4:0] $end
$var reg 32 $ A [31:0] $end
$var reg 32 % B [31:0] $end
$var reg 3 & funct3 [2:0] $end
$var reg 7 ' funct7 [6:0] $end
$var reg 7 ( opcode [6:0] $end
$scope module alu $end
$var wire 32 ) A [31:0] $end
$var wire 32 * B [31:0] $end
$var wire 1 ! zero $end
$var wire 32 + sub_temp [31:0] $end
$var wire 5 , ALUop [4:0] $end
$var reg 32 - Y [31:0] $end
$upscope $end
$scope module alu_ctrl $end
$var wire 3 . funct3 [2:0] $end
$var wire 7 / funct7 [6:0] $end
$var wire 7 0 opcode [6:0] $end
$var reg 5 1 ALUop [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
b1100011 0
bx /
b0 .
b100000 -
b0 ,
b0 +
b10000 *
b10000 )
b1100011 (
bx '
b0 &
b10000 %
b10000 $
b0 #
b100000 "
0!
$end
#100
b110000 "
b110000 -
b1 &
b1 .
b11111111111111111111111111110000 +
b100000 %
b100000 *
#200
1!
b0 "
b0 -
b100 &
b100 .
b10000 %
b10000 *
b11111111111111111111111111100000 +
b11111111111111111111111111110000 $
b11111111111111111111111111110000 )
#300
b101 &
b101 .
b11111111111111111111111111110000 %
b11111111111111111111111111110000 *
b100000 +
b10000 $
b10000 )
#400
b110 &
b110 .
#500
b111 &
b111 .
b10000 %
b10000 *
b11111111111111111111111111100000 +
b11111111111111111111111111110000 $
b11111111111111111111111111110000 )
#600
