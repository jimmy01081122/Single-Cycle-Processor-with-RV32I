$date
	Mon Mar 10 18:03:58 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module ALU_ALUctr_ImmGen_tb $end
$var wire 1 ! zero $end
$var wire 32 " imm_out [31:0] $end
$var wire 32 # Y [31:0] $end
$var wire 5 $ ALUop [4:0] $end
$var reg 32 % A [31:0] $end
$var reg 3 & funct3 [2:0] $end
$var reg 7 ' funct7 [6:0] $end
$var reg 32 ( instr [31:0] $end
$var reg 7 ) opcode [6:0] $end
$scope module alu $end
$var wire 32 * A [31:0] $end
$var wire 1 ! zero $end
$var wire 32 + B [31:0] $end
$var wire 5 , ALUop [4:0] $end
$var reg 32 - Y [31:0] $end
$upscope $end
$scope module alu_ctrl $end
$var wire 3 . funct3 [2:0] $end
$var wire 7 / funct7 [6:0] $end
$var wire 7 0 opcode [6:0] $end
$var reg 5 1 ALUop [4:0] $end
$upscope $end
$scope module imm_gen $end
$var wire 32 2 instr [31:0] $end
$var reg 32 3 imm_out [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 3
b1000001000001000010011 2
b0 1
b10011 0
bx /
b0 .
b10010 -
b0 ,
b10 +
b10000 *
b10011 )
b1000001000001000010011 (
bx '
b0 &
b10000 %
b0 $
b10010 #
b10 "
0!
$end
#100
b11 $
b11 ,
b11 1
b1 #
b1 -
b11 "
b11 +
b11 3
b10 &
b10 .
b11111111111111111111111111110000 %
b11111111111111111111111111110000 *
b1100001000001010010011 (
b1100001000001010010011 2
#200
b100 $
b100 ,
b100 1
1!
b0 #
b0 -
b11 &
b11 .
b10000 %
b10000 *
b1100001001001100010011 (
b1100001001001100010011 2
#300
0!
b1111 #
b1111 -
b101 $
b101 ,
b101 1
b0 "
b0 +
b0 3
b100 &
b100 .
b1111 %
b1111 *
b11110000111100001111000011110011 (
b11110000111100001111000011110011 2
#400
b1000 $
b1000 ,
b1000 1
b1111000011110000 #
b1111000011110000 -
b110 &
b110 .
b1111000011110000 %
b1111000011110000 *
#500
1!
b0 #
b0 -
b1001 $
b1001 ,
b1001 1
b111 &
b111 .
#600
b1100 "
b1100 +
b1100 3
b1010 $
b1010 ,
b1010 1
b0 &
b0 .
b10000 %
b10000 *
b1010000011001100011 (
b1010000011001100011 2
b1100011 )
b1100011 0
#700
0!
b1 #
b1 -
b1011 $
b1011 ,
b1011 1
b1 &
b1 .
b1010001011001100011 (
b1010001011001100011 2
#800
b1100 $
b1100 ,
b1100 1
b100 &
b100 .
b11111111111111111111111111110000 %
b11111111111111111111111111110000 *
b1010100011001100011 (
b1010100011001100011 2
#900
b1101 $
b1101 ,
b1101 1
0!
b1 #
b1 -
b101 &
b101 .
b10000 %
b10000 *
b1010101011001100011 (
b1010101011001100011 2
#1000
1!
b0 #
b0 -
b1110 $
b1110 ,
b1110 1
b110 &
b110 .
b1010110011001100011 (
b1010110011001100011 2
#1100
0!
b1 #
b1 -
b1111 $
b1111 ,
b1111 1
b111 &
b111 .
b11111111111111111111111111110000 %
b11111111111111111111111111110000 *
b1010111011001100011 (
b1010111011001100011 2
#1200
